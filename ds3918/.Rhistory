mMNARInd <- mMNAR
mMNARInd$thickness <- indicatorImpute(mMNARInd, 6)
mMNARInd$ulcer <- indicatorImpute(mMNARInd, 7)
mMARInd <- mMAR
mMARInd$thickness <- indicatorImpute(mMARInd, 6)
mMARInd$ulcer <- indicatorImpute(mMARInd, 7)
mMAR2Ind <- mMAR2
mMAR2Ind$thickness <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind$ulcer <- indicatorImpute(mMAR2Ind, 7)
View(mMNARInd)
mMNARInd <- mMNAR
View(mMNARInd)
mMNARInd <- mMNAR
mMNARInd <- indicatorImpute(mMNARInd, 6)
mMNARInd <- indicatorImpute(mMNARInd, 7)
View(mMNARInd)
mMARInd <- mMAR
mMARInd <- indicatorImpute(mMARInd, 6)
mMARInd <- indicatorImpute(mMARInd, 7)
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
View(mMAR2Ind)
mMAR2 <- m
mMAR$age <- marGenerator(mMAR$age, mMAR$time, probMis = 0.15)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$age, probMis = 0.15, direction = "up")
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
View(mMAR2Ind)
mMNAR <- m
mMNAR$thickness <- nmarGenerator(mMNAR$thickness)
mMNAR$ulcer <- nmarGenerator(mMNAR$ulcer)
mMAR <- m
mMAR$ulcer <- marGenerator(mMAR$ulcer, mMAR$time, probMis = 0.15)
mMAR$thickness <- marGenerator(mMAR$thickness, mMAR$time, probMis = 0.15)
mMAR2 <- m
mMAR$age <- marGenerator(mMAR$ulcer, mMAR$time, probMis = 0.15)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "up")
mMNARInd <- mMNAR
mMNARInd <- indicatorImpute(mMNARInd, 6)
mMNARInd <- indicatorImpute(mMNARInd, 7)
mMARInd <- mMAR
mMARInd <- indicatorImpute(mMARInd, 6)
mMARInd <- indicatorImpute(mMARInd, 7)
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
View(mMAR2Ind)
mMAR2 <- m
mMAR$ulcer <- marGenerator(mMAR$ulcer, mMAR$time, probMis = 0.15)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "up")
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
View(mMAR2Ind)
mMAR2 <- m
mMAR2$ulcer <- marGenerator(mMAR2$ulcer, mMAR2$time, probMis = 0.15)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "up")
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
View(mMAR2Ind)
regMNARindic <- with(mMNARindic, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMARindic  <- with(mMARindic , lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMAR2indic <- with(mMAR2indic, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMNARindic <- with(mMNARInd, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMARindic  <- with(mMARInd , lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMAR2indic <- with(mMAR2Ind, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
summary(regTrue)
summary(regMNARindic)
summary(regMARindic)
summary(regMAR2indic)
View(mMARInd)
mMNAR <- m
mMNAR$thickness <- nmarGenerator(mMNAR$thickness)
mMNAR$ulcer <- nmarGenerator(mMNAR$ulcer)
mMAR <- m
mMAR$ulcer <- marGenerator(mMAR$ulcer, mMAR$time, probMis = 0.15)
mMAR$thickness <- marGenerator(mMAR$thickness, mMAR$time, probMis = 0.15)
mMAR2 <- m
mMAR2$ulcer <- marGenerator(mMAR2$ulcer, mMAR2$time, probMis = 0.15)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "up")
View(mMAR2)
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "down")
View(mMAR2)
marGenerator
mMAR2$thickness <- marGenerator(mMAR2$thickness, mMAR2$ulcer, probMis = 0.15, direction = "down")
View(mMAR2)
mMAR2$thickness[mMAR2$ulcer > quantile(mMAR2$ulcer, 1-0.15, na.rm=T)]
mMAR2$ulcer > quantile(mMAR2$ulcer, 1-0.15, na.rm=T)
mMAR2$ulcer < quantile(mMAR2$ulcer, 0.15, na.rm=T)
View(mMAR)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(15 + mMAR$time))
meanI(Rthick.mar)
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(15 + .2*mMAR$time))
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(1.5 + .2*mMAR$time))
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(1.5 + .2*mMAR$time + 0.2*mMAR$sex))
mean(Rthick.mar)
length(Rthick.mar)
dim(mMAR)
invlogit(1.5 + .2*mMAR$time + .2*mMAR$sex)
invlogit(.5 + .2*mMAR$time + .2*mMAR$sex)
invlogit(-.5 + .2*mMAR$time + .2*mMAR$sex)
invlogit(-.5 + .02*mMAR$time + .2*mMAR$sex)
invlogit(-.5 + .02*mMAR$time + .02*mMAR$sex)
invlogit(-.5 + .02*mMAR$time - .02*mMAR$sex)
invlogit(-.5 + .02*mMAR$time - .1*mMAR$sex)
invlogit(-.5 - .2*mMAR$time - .1*mMAR$sex)
invlogit(-.5 - .02*mMAR$time - .1*mMAR$sex)
invlogit(-.5 - .002*mMAR$time - .1*mMAR$sex)
invlogit(-.5 + .002*mMAR$time - .1*mMAR$sex)
time.noise <- mMAR$time + rnorm(0,1)
time.noise <- mMAR$time + rnorm(length(mMAR$time), 0,1)
invlogit(-.5 + .002*time.noise$time - .1*mMAR$sex)
invlogit(-.5 + .002*time.noise - .1*mMAR$sex)
invlogit(-.5 - .002*time.noise - .1*mMAR$sex)
time.noise <- mMAR$time + rnorm(length(mMAR$time), 0,2)
invlogit(-.5 - .002*time.noise - .1*mMAR$sex)
invlogit(-.5 - .002*time.noise + .1*mMAR$sex)
invlogit(-.5 - .002*time.noise + 10*mMAR$sex)
invlogit(-.5 - .002*time.noise + 100*mMAR$sex)
invlogit(-.5 - .002*time.noise + 20*mMAR$sex)
round(invlogit(-.5 - .002*time.noise + 20*mMAR$sex),2)
round(invlogit(-.5 - .002*time.noise + 10*mMAR$sex),2)
round(invlogit(-.5 - .003*time.noise + 10*mMAR$sex),2)
round(invlogit(-.5 - .003*time.noise + 5*mMAR$sex),2)
round(invlogit(-.5 + .003*time.noise + 5*mMAR$sex),2)
round(invlogit(-.5 + .0003*time.noise + 5*mMAR$sex),2)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 + .0003*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 + .00025*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 + .0002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 + .00002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 + .0000002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .0000002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .000002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .00002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .0002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .002*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .02*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .001*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .001*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .003*time.noise + 5*mMAR$sex) )
mean(Rthick.mar)
Rthick.mar == 1
mMAR$thickness[Rthick.mar == 1] <- NA
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .003*time.noise + 5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar == 1
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-.5 - .004*time.noise + 5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar == 1
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(.5 - .004*time.noise + 5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar == 1
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(.5 - .004*time.noise - 5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(.5 - .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(5 - .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(3 - .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(3 - .04*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(3 - .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar == 1
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(3 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-3 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-100 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-50 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-20 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-10 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-15 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-10 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-11 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-12 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-13 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar <- rbinom(dim(mMAR)[1], size = 1, invlogit(-14 + .004*time.noise - 0.5*mMAR$sex) )
mean(Rulcer.mar)
Rulcer.mar == 1
mMAR$ulcer[Rulcer.mar == 1] <- NA
mMAR2 <- m
time.noise <- mMAR2$time + rnorm(length(mMAR2$time), 0, 3)
Rthick.mar2 <- rbinom(dim(mMAR2)[1], size = 1, invlogit(-.5 - .003*time.noise + 5*mMAR2$sex) )
mMAR2$thickness[Rthick.mar2 == 1] <- NA
mean(Rthick.mar2)
psTnM <- invlogit(1.5 + .003*time.noise)
psTnM
psTnM <- invlogit(1.5 - .003*time.noise)
psTnM
psTnM <- invlogit(15 - .003*time.noise)
psTnM
psTnM <- invlogit(15 - .003*time.noise + 1.2*mMAR2$sex)
psTnM
psTnM <- invlogit(15 - .003*time.noise + 1.2*mMAR2$age)
psTnM
psTnM <- invlogit(15 - .003*time.noise - 0.3*mMAR2$age)
psTnM
psTnM <- invlogit(15 - .003*time.noise - 0.03*mMAR2$age)
psTnM
psTnM <- invlogit(15 - .003*time.noise - 0.1*mMAR2$age)
psTnM
psTnM <- invlogit(15 - .003*time.noise + 0.1*mMAR2$age)
psTnM
time.noise <- mMAR2$time + rnorm(length(mMAR2$time), 0, 4)
Rthick.mar2 <- rbinom(dim(mMAR2)[1], size = 1, invlogit(-.5 - .003*time.noise + 5*mMAR2$sex) )
mMAR2$thickness[Rthick.mar2 == 1] <- NA
mean(Rthick.mar2)
psTnM <- invlogit(15 - .003*time.noise + 0.1*mMAR2$age)
psTnM
psTnM <- invlogit(15 - .003*time.noise - 0.1*mMAR2$age)
psTnM
psTnM <- invlogit(10 - .003*time.noise - 0.1*mMAR2$age)
psTnM
psTnM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age)
psTnM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age + 0.5*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age + 0.8*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 2*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 0.2*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 0.3*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 0.5*mMAR2$thickness)
psTM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 0.4*mMAR2$thickness)
psTM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
ps <- psTnM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
Rulcer.mar2 <- rbinom(dim(mMAR2)[1], size = 1, ps )
ps <- psTnM
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age)
psTnM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age - 0.4*mMAR2$thickness)
ps <- psTnM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
Rulcer.mar2 <- rbinom(dim(mMAR2)[1], size = 1, ps )
mean(Rulcer.mar2)
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age)
psTnM <- invlogit(12 - .003*time.noise - 0.1*mMAR2$age - 0.4*mMAR2$thickness)
ps <- psTnM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
Rulcer.mar2 <- rbinom(dim(mMAR2)[1], size = 1, ps )
mean(Rulcer.mar2)
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age)
psTnM <- invlogit(10 - .003*time.noise - 0.1*mMAR2$age - 0.4*mMAR2$thickness)
ps <- psTnM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
Rulcer.mar2 <- rbinom(dim(mMAR2)[1], size = 1, ps )
mean(Rulcer.mar2)
psTM <- invlogit(13 - .003*time.noise - 0.1*mMAR2$age)
psTnM <- invlogit(5 - .003*time.noise - 0.1*mMAR2$age - 0.4*mMAR2$thickness)
ps <- psTnM
ps[which(is.na(mMAR2$thickness))] <- psTM[which(is.na(mMAR2$thickness))]
Rulcer.mar2 <- rbinom(dim(mMAR2)[1], size = 1, ps )
mean(Rulcer.mar2)
mMAR2$ulcer[Rulcer.mar2 == 1] <- NA
mMNARMeanI <- mMNAR
mMNARMeanI$thickness <- meanImpute(mMNARMeanI$thickness)
mMNARMeanI$ulcer <- meanImpute(mMNARMeanI$ulcer)
mMARMeanI <- mMAR
mMARMeanI$thickness <- meanImpute(mMARMeanI$thickness)
mMARMeanI$ulcer <- meanImpute(mMARMeanI$ulcer)
mMAR2MeanI <- mMAR2
mMAR2MeanI$thickness <- meanImpute(mMAR2MeanI$thickness)
mMAR2MeanI$ulcer <- meanImpute(mMAR2MeanI$ulcer)
regTrue <- with(Melanoma, lm(time ~ sex + age + ulcer + thickness + year))
regMNARMeanI <- with(mMNARMeanI, lm(time ~ sex + age + ulcer + thickness + year))
regMARMeanI <- with(mMARMeanI, lm(time ~ sex + age + ulcer + thickness + year))
regMAR2MeanI <- with(mMAR2MeanI, lm(time ~ sex + age + ulcer + thickness + year))
mMNARInd <- mMNAR
mMNARInd <- indicatorImpute(mMNARInd, 6)
mMNARInd <- indicatorImpute(mMNARInd, 7)
mMARInd <- mMAR
mMARInd <- indicatorImpute(mMARInd, 6)
mMARInd <- indicatorImpute(mMARInd, 7)
mMAR2Ind <- mMAR2
mMAR2Ind <- indicatorImpute(mMAR2Ind, 6)
mMAR2Ind <- indicatorImpute(mMAR2Ind, 7)
regMNARindic <- with(mMNARInd, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMARindic  <- with(mMARInd , lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
regMAR2indic <- with(mMAR2Ind, lm(time ~ sex + age + ulcer + thickness + year + thickness_i + ulcer_i))
View(mMARInd)
summary(regMNARindic)
summary(regMARindic)
summary(regMAR2indic)
seas <- read.dta("/Users/denisstukal/Dropbox/2015_SPRING/Missing_data/Labs/Lab2/sesame.dta",
convert.factors=FALSE, convert.underscore=TRUE)
require(foreign)
seas <- read.dta("/Users/denisstukal/Dropbox/2015_SPRING/Missing_data/Labs/Lab2/sesame.dta",
convert.factors=FALSE, convert.underscore=TRUE)
require(gdata)
d <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator gapminder gdp_per_capita_ppp.xlsx',
header=T)
d <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator_gapminder_gdp_per_capita_ppp.xlsx',
header=T)
help(read.xls)
d <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator_gapminder_gdp_per_capita_ppp.xlsx',
sheet = "Data", header=T)
d <- read.table('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator_gapminder_gdp_per_capita_ppp.txt',
sep = "\t", header=T)
View(d)
d <- read.table('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator_gapminder_gdp_per_capita_ppp.txt',
sep = "\t", header=T)
d <- read.table('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/datatxt.txt',
sep = "\t", header=T)
d <- read.table('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/dataclean.txt',
sep = "\t", header=T)
d <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/dataclean.xlsx',
sep = "\t", header=T)
d2 <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator.xlsx',
sep = "\t", header=T)
d2 <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator.xlsx',
sep = "\t", header=T)
View(d2)
d <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/dataclean.xlsx',
sep = ",", header=T)
d2 <- read.xls('/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8_data/indicator.xlsx',
sep = ",", header=T)
require(zoo)
source("/Users/denisstukal/Dropbox/2015_SPRING/Missing_data/Labs/Lab2/create.missing.data.R")
######################### Non-response weighting
N = nrow(Mel2)
### suppose "nature" created missingness in the following way for
### the thickess variable
set.seed(1234)
ps = .95*Mel2$ulcer + .3*(1-Mel2$ulcer)
Rtime.mar = rbinom(N, 1, ps)
mean(Rtime.mar)
### First let's suppose that there is missingness for just one
### predictor variable, thickness
mar.simp = Mel2
mar.simp$time = Mel2$time
mar.simp$time[Rtime.mar==0] = NA
mar.simp = Mel2
mar.simp$time = Mel2$time
mar.simp$time[Rtime.mar==0] = NA
mar.simp.cc = na.omit(mar.simp)
# how do we estimate the probability of response?
mean(!is.na(mar.simp$time))
mean(!is.na(mar.simp$time[mar.simp$ulcer==0]))
mean(!is.na(mar.simp$time[mar.simp$ulcer==1]))
!is.na(mar.simp$time)
mean(mar.simp$time[mar.simp$ulcer==0],na.rm=TRUE)
mean(mar.simp$time[mar.simp$ulcer==1],na.rm=TRUE)
# equivalently...
mean(mar.simp.cc$time[mar.simp.cc$ulcer==0])
mean(mar.simp.cc$time[mar.simp.cc$ulcer==1])
### Compare these to the truth
mean(Mel2$time[Mel2$ulcer==0])
#[1] .2336462
mean(Mel2$time[Mel2$ulcer==1])
#[1] -.2985479
### But now we want the overall mean for thickness in the complete data
### Thi is just a weighted average of these (top 2) numbers
.2336*mean(Mel2$ulcer==0) - .2985*mean(Mel2$ulcer==1)
mean(Mel2$time)
mean(Mel2$ulcer==0)
#[1] 0.56
mean(Mel2$ulcer==1)
#[1] 0.44
mean(mar.simp.cc$ulcer==0)
#[1] 0.41
mean(mar.simp.cc$ulcer==1)
# So a naive calculation would be equivalent to
mean(mar.simp.cc$time[mar.simp.cc$ulcer==0])*mean(mar.simp.cc$ulcer==0) +
mean(mar.simp.cc$time[mar.simp.cc$ulcer==1])*mean(mar.simp.cc$ulcer==1)
mean(mar.simp.cc$time)
# -.13
### those with ulcer==0 are underrepresented;
### those with ulcer==1 are overrepresented
### how do we correct for this?
### we just need to figure out how to weight up the numbers in our
### complete case sample appropriately
### let's return to the probability of response separately within ulcer==0 and ulcer==1
m0 = mean(!is.na(mar.simp$time[mar.simp$ulcer==0]))
m1 = mean(!is.na(mar.simp$time[mar.simp$ulcer==1]))
mar.simp$Rtime <- numeric(n)
mar.simp$Rtime <- numeric(N)
mar.simp$Rtime[!is.na(mar.simp$time)] <- 1
mod.probR = glm(Rtime ~ sex + age + year + thickness + ulcer + status, family="binomial",data=mar.simp)
ps = mod.probR$fitted[!is.na(mar.simp$time)]
summary(ps)
hist(ps)
set.seed(1234)
ps = .95*Mel2$ulcer + .5*(1-Mel2$ulcer)
Rthick.mar = rbinom(N, 1, ps)
mean(Rthick.mar)
### First let's suppose that there is missingness for just one
### predictor variable, thickness
mar.simp = Mel2
mar.simp$thickness = Mel2$thickness
mar.simp$thickness[Rthick.mar==0] = NA
## If we knew more about the relationship between the other variables and
## thickness that should tell us something about the missing values
## Let's try to predict thickness from the other variables using a linear reg.
## in the complete case data
mod.thick = lm(thickness ~ time + sex + age + ulcer + year + status, data=mar.simp.cc)
summary(mod.thick)
thick.hat = predict(mod.thick, newdata=mar.simp[is.na(mar.simp$thick),])
par(mfrow=c(2,1))
hist(thick.hat)
hist(mar.simp.cc$thickness)
### oops something looks wrong... how should we fix????????
summary(mod.thick)
mod.thick = lm(thickness ~ time + ulcer , data=mar.simp.cc)
summary(mod.thick)
thick.hat = predict(mod.thick, newdata=mar.simp[is.na(mar.simp$thick),])
par(mfrow=c(2,1))
hist(thick.hat)
hist(mar.simp.cc$thickness)
names(mod.thick)
plot(mod.thick$res ~ mod.thick$fitted)
par(mfrow=c(1,1))
plot(mod.thick$res ~ mod.thick$fitted)
require(foreign)
require(gdata)
setwd("/Users/denisstukal/Dropbox/2015_SPRING/Programming_Python/HW/hw8/ds3918")
list.files()
countries <- read.csv(file = countries.csv, header=T, sep = ",")
countries <- read.csv(file = "countries.csv", header=T, sep = ",")
View(countries)
help(read_xls)
help(read.xls)
income <- read.xls("indicator gapminder gdp_per_capita_ppp.xlsx")
income <- read.xls("indicator gapminder gdp_per_capita_ppp.xlsx",
sheet="Data")
income <- read.csv("indicator gapminder gdp_per_capita_ppp.csv", header=T, sep=",")
View(income)
length(colnames(income))
(colnames(income))
(colnames(income)) <- c("country", 1800:2012)
colnames(income) <- c("country", 1800:2012)
colnames(income)
income2 <- t(income)
View(income2)
dim(income2)
dim(income)
income2[1,]
income2[2,]
income2[1,]
colnames(income2) <- income2[1,]
View(income2)
income2 <- income2[2:,]
income2 <- income2[-1,]
View(income2)
income2 <- as.numeric(income2)
View(income2)
income2 <- data.frame(income2)
View(income2)
income2 <- t(income)
colnames(income2) <- income2[1,]
income2 <- income2[-1,]
View(income2)
income2 <- data.frame(income2)
View(income2)
View(income)
y1800 <- income[,"1800"]
View(y1899)
View(y1800)
y1800 <- income[,c("country", "1800")]
View(y1800)
colnames(countries)
colnames(y1800)
merged <- merge(x = countries, y = y1800, by.x = "Country", by.y = "country")
View(merged)
colnames(merged)
boxplot(1800 ~ Region, data = merged)
boxplot("1800" ~ Region, data = merged)
colnames(merged) <- c("Country", "Region", "inc1800")
boxplot(inc1800 ~ Region, data = merged)
y2012 <- income[,c("country", "2012")]
merged <- merge(x = countries, y = y2012, by.x = "Country", by.y = "country")
colnames(merged) <- c("Country", "Region", "inc2012")
boxplot(inc2012 ~ Region, data = merged)
27^9 < 2^32
27^9 > 2^32
27^8 > 2^32
2^32
27^9
